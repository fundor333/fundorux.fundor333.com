version: 2.1
jobs:
  build:
    docker:
      - image: fundor333/hugo
        environment:
          TZ: "Europe/Rome"
    working_directory: ~/repo
    environment:
      TZ: "Europe/Rome"
      BRANCH: gh-pages
      TARGET_REPO: fundor333/fundorux
      HUGO_OUTPUT_FOLDER: docs
    steps:
      - checkout

      - run:
          name: build static pages with Hugo
          command: |
            apk add --update py-pygments && hugo

      - deploy:
          name: Deploy static pages to Github Pages
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
               echo -e "Starting to deploy to Github Pages\n"
               apk add --update git
               apk add --update rsync
               cd ~/repo
               git config --global user.email "builds@circleci.com"
               git config --global user.name "CircleCI"
               #using token clone gh-pages branch
               git clone --quiet --branch=$CIRCLE_BRANCH https://${GH_TOKEN}@github.com/$TARGET_REPO built_website > /dev/null
               #go into directory and copy data we're interested in to that directory
               cd built_website
               echo "rsync built code with checked out code..."
               rsync -r --exclude=.git --delete ../$HUGO_OUTPUT_FOLDER/ ./
               #add, commit and push files
               echo "add files to git..."
               git add -f .
               echo "commit files to git repository..."
               if git commit -m "CircleCI build $CIRCLE_BUILD_NUM pushed to Github Pages" ; then
                 echo "git push files with force..."
                 git push -fq origin $BRANCH > /dev/null
                 echo -e "Deploy completed\n"
               else
                 echo "Content not changed, nothing to deploy"
               fi
             else
               echo "Not master branch, dry run only"
             fi

workflows:
  version: 2
  commit:
    jobs:
      - build:
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
